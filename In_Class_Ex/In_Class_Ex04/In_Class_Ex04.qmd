---
title: "In-Class Exercise 4"
author: "Bhairavi"
date: "4 February 2023"
---

The code chunk below installed the necessary R packages.

```{r}
pacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot, ggside, readxl, performance, parameters, see)
```

The code chunk below loads the Exam_data.csv file.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

The code chunk below creates an interactive visualization using plot_ly().

```{r}
plot_ly(data = exam_data,
        x = ~ENGLISH,
        y = ~MATHS,
        color = ~RACE)
```

The code chunk below creates an interactive scatterplot using ggplotly().

```{r}
p <- ggplot(data = exam_data,
            aes(x = MATHS,
                y = ENGLISH)) +
  geom_point(dotsize = 1) +
  coord_cartesian(xlim = c(0, 100),
                  ylim = c(0, 100))

ggplotly(p)
```

The code chunk below is used to build a visual for the two-sample mean test of Maths scores by Gender. 

```{r}
ggbetweenstats(data = exam_data,
               x = GENDER,
               y = MATHS,
               type = "np",
               messages = FALSE)
```

In the code chunk below, ggscatterstats() is used to build a visual for Significant Tesst of Correlation between the Maths and English scores.

```{r}
ggscatterstats(data = exam_data,
               x = MATHS,
               y = ENGLISH,
               marginal = TRUE)
```

The code chunk below, let's import the data worksheet of ToyottaCorolla.xls into R.

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls",
                       "data")
car_resale
```

The code chunk below is used to build a multiple linear regression model by using lm() of Base Stas of R.

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period,
            data = car_resale)
model
```

The code chunk below checks for collinearity.

```{r}
check_collinearity(model)
```

We can also plot this collinearity.

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

The following code chunk is the revised model:

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period,
            data = car_resale)
model1
```

Checking Normality Assumption:

```{r}
check_n <- check_normality(model1)
plot(check_n)
```

We can also perform the complete model diagnostic by using check_model().

```{r}
#| fig-height: 12
#| fig-width: 10
check_model(model1)
```

The code chunk below groups the observation by Race, computes the count of observations, mean, standard deviation and standard error of Maths by Race and saves the output as a tibble data table called my_sum.

```{r}
my_sum <- exam_data %>%
  group_by(RACE) %>%
  summarise(n = n(),
            mean = mean(MATHS),
            sd = sd(MATHS)) %>%
  mutate(se = sd / sqrt(n - 1))
```

The code chunk below is used to reveal the standard error of mean Maths score by Race.

```{r}
ggplot(my_sum) +
  geom_errorbar(aes(x = RACE,
                    ymin = mean - se,
                    ymax = mean + se),
                width = 0.2,
                color = "black",
                alpha = 0.9,
                size = 0.5) +
  geom_point(aes(x = RACE,
                 y = mean),
             stat = "identity",
             color = "red",
             size = 1.5,
             alpha = 1) +
  ggtitle("Standard error of mean Maths score by Race")
```